// TODO 来自标准系统：计划综合看板，pageId=SfcTaskBoard

var T1list=[],T2list=[],T3list=[],T4list=[],T5list=[],T8list=[],T9list=[],T10list=[];
var T6list1=[],T6list2=[],T6list3=[],T6name=[];
var T7list1=[],T7list2=[],T7list3=[],T7name=[];
//先获取数据
$(function () {
  var T1,T2,T3,T4,T5,T6,T7,T8,T9,T10;

  $.ajax({
    type:"post",    
    dataType:"json",
    url:"../Com/PageServer.aspx?Page_ID=KanbanBase&action=GetData",
    async: false,
    success:function(result){
      if (result.success) {
        const jsonString = JSON.stringify(result);
        const dataSize = new Blob([jsonString]).size; 
        console.log(dataSize);
        T6 = result.T1;
      }
      else{
        alert(result.msg);
      }
    }, error: function (data) {
      alert(data);
    }

  });

  //供应商交货率1
  //addProvRow(T1);
  //采购员排名2
  addQTList(T2); 
  //采购大类3
  for(var i=0;i<T3.length;i++){
    let T3Array={
      name: T3[i].Class_Name,
      value: T3[i].Class_Qty,
      name3: T3[i].Class_Percent
    }
    T3list.push(T3Array);
  }
  //足料分析
  addEnoughList(T6); 
  //需求计划分析5
  for(var i=0;i<T5.length;i++){
    let T5Array={
      name: T5[i].Title_Name,
      value: T5[i].Num
    }
    T5list.push(T5Array);
  }
  //当日计划分析5
  for(var i=0;i<T8.length;i++){
    let T5Array={
      name: T8[i].Title_Name,
      value: T8[i].Num
    }
    T8list.push(T5Array);
  }
  //采购金额前三价格走势
  for(var i=0;i<T6.length;i++){
    if (T6[i].Ranking==1){ 
      for (let j = 1; j <= 12; j++) {
        const priceKey = `Price${j}`; // 构建键名
        T6list1.push(Number(T6[i][priceKey])); // 添加到数组中
      }
      T6name.push(T6[i].Item_Name);
    }
    else if (T6[i].Ranking==2){ 
      for (let j = 1; j <= 12; j++) {
        const priceKey = `Price${j}`; // 构建价格键名
        T6list2.push(Number(T6[i][priceKey])); // 将其值转换为数字并添加到数组中
      }
      T6name.push(T6[i].Item_Name);
    }
    else if (T6[i].Ranking==3){ 
      for (let j = 1; j <= 12; j++) {
        const priceKey = `Price${j}`; // 构建价格键名
        T6list3.push(Number(T6[i][priceKey])); // 将其值转换为数字并添加到数组中
      }
      T6name.push(T6[i].Item_Name);
    }

  }

  //采购数量前三价格走势
  for(var i=0;i<T7.length;i++){
    if (T7[i].Ranking==1){ 
      for (let j = 1; j <= 12; j++) {
        const priceKey = `Price${j}`; // 构建键名
        T7list1.push(Number(T7[i][priceKey])); // 添加到数组中
      }
      T7name.push(T7[i].Item_Name);
    }
    else if (T7[i].Ranking==2){ 
      for (let j = 1; j <= 12; j++) {
        const priceKey = `Price${j}`; // 构建价格键名
        T7list2.push(Number(T7[i][priceKey])); // 将其值转换为数字并添加到数组中
      }
      T7name.push(T7[i].Item_Name);
    }
    else if (T7[i].Ranking==3){ 
      for (let j = 1; j <= 12; j++) {
        const priceKey = `Price${j}`; // 构建价格键名
        T7list3.push(Number(T7[i][priceKey])); // 将其值转换为数字并添加到数组中
      }
      T7name.push(T7[i].Item_Name);
    }

  }

  //总采购量
  //ShowAllInfo(T8); 

  //采购计划分类占比
  for(var i=0;i<T9.length;i++){
    let T9Array={
      name: T9[i].Title_Name,
      value: T9[i].Num
    }
    T9list.push(T9Array);
  }

  //采购计划物料占比
  for(var i=0;i<T10.length;i++){
    let T10Array={
      name: T10[i].Item_Name,
      value: T10[i].Plan_Qty
    }
    T10list.push(T10Array);
  }

  //
});

/**************************************************************自制计划达成率************************************************************* */
// 模块1
$(function () {
  var myChart = echarts.init($("#model1 .main")[0]);
  function setOptions() {
    return (option = {
      title: {
        text: "自制计划达成率(本周)",
        left: fontSize(10),
        top: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(18),
        },
      },
      tooltip: {
        textStyle: {
          fontSize: fontSize(14),
        },
        trigger: "axis",
        axisPointer: {
          lineStyle: {
            color: "#57617B",
          },
        },
      },
      legend: {
        data: T7name,
        right: fontSize(20),
        top: fontSize(35),
        textStyle: {
          color: "rgba(255,255,255,.8)",
          fontSize: fontSize(12),
        },
        itemGap: 20,
      },
      grid: {
        left: fontSize(20),
        right: fontSize(20),
        top: fontSize(60),
        bottom: fontSize(20),
        containLabel: true,
      },
      xAxis: [
        {
          type: "category",
          boundaryGap: false,
          axisLabel: {
            show: true,
            textStyle: {
              color: "rgba(255,255,255,.8)",
              fontSize: fontSize(12),
            },
          },
          data: [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
          ],
        },
      ],
      yAxis: {
        axisLabel: {
          show: true,
          textStyle: {
            color: "rgba(255,255,255,.8)",
            fontSize: fontSize(12),
          },
        },
        axisLine: {
          lineStyle: {
            color: "rgba(255,255,255,.1)",
          },
        },
        splitLine: {
          lineStyle: {
            color: "rgba(255,255,255,.1)",
          },
        },
      },
      series: [
        {
          name: T7name[0],
          type: "line",
          smooth: true,
          symbol: "circle",
          symbolSize: fontSize(5),
          showSymbol: false,
          lineStyle: {
            normal: {
              width: fontSize(2),
            },
          },
          areaStyle: {
            normal: {
              color: new echarts.graphic.LinearGradient(
                0,
                0,
                0,
                1,
                [
                  {
                    offset: 0,
                    color: "rgba(24, 163, 64, 0.3)",
                  },
                  {
                    offset: 0.8,
                    color: "rgba(24, 163, 64, 0)",
                  },
                ],
                false
              ),
              shadowColor: "rgba(0, 0, 0, 0.1)",
              shadowBlur: fontSize(10),
            },
          },
          itemStyle: {
            normal: {
              color: "#cdba00",
              borderColor: "rgba(137,189,2,0.27)",
              borderWidth: fontSize(12),
            },
          },
          data: T7list1,
        },
      ],
    });
  }
  myChart.setOption(setOptions());
  //动效
  var interval;
  intervalLoad();
  window.addEventListener("resize", function () {
    myChart.clear();
    myChart.setOption(setOptions());
    myChart.resize();
    this.clearInterval(interval);
    intervalLoad();
  });
  function intervalLoad() {
    interval = setInterval(() => {
      myChart.clear();
      myChart.setOption(setOptions());
    }, 6000);
  }
});
/**************************************************************自制计划达成率************************************************************* */

/**************************************************************采购计划达成率************************************************************* */
//模块2
$(function () {
  //console.log(T6name);
  var myChart = echarts.init($("#model2 .main")[0]);
  function setOptions() {
    return (option = {
      title: {
        text: "采购计划达成率(本周)",
        left: fontSize(10),
        top: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(18),
        },
      },
      tooltip: {
        textStyle: {
          fontSize: fontSize(14),
        },
        trigger: "axis",
        axisPointer: {
          lineStyle: {
            color: "#57617B",
          },
        },
      },
      legend: {
        data: T6name,
        right: fontSize(20),
        top: fontSize(35),
        textStyle: {
          color: "rgba(255,255,255,.8)",
          fontSize: fontSize(12),
        },
        itemGap: fontSize(20),
      },
      grid: {
        left: fontSize(20),
        right: fontSize(20),
        top: fontSize(60),
        bottom: fontSize(20),
        containLabel: true,
      },
      xAxis: [
        {
          type: "category",
          boundaryGap: false,
          axisLabel: {
            show: true,
            textStyle: {
              color: "rgba(255,255,255,.8)",
              fontSize: fontSize(12),
            },
          },
          data: [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
          ],
        },
      ],
      yAxis: {
        axisLabel: {
          show: true,
          textStyle: {
            color: "rgba(255,255,255,.8)",
            fontSize: fontSize(12),
          },
        },
        axisLine: {
          lineStyle: {
            color: "rgba(255,255,255,.1)",
          },
        },
        splitLine: {
          lineStyle: {
            color: "rgba(255,255,255,.1)",
          },
        },
      },
      series: [
        {
          name: T6name[0],
          type: "line",
          smooth: true,
          symbol: "circle",
          symbolSize: fontSize(5),
          showSymbol: false,
          lineStyle: {
            normal: {
              width: fontSize(2),
            },
          },
          areaStyle: {
            normal: {
              color: new echarts.graphic.LinearGradient(
                0,
                0,
                0,
                1,
                [
                  {
                    offset: 0,
                    color: "rgba(24, 163, 64, 0.3)",
                  },
                  {
                    offset: 0.8,
                    color: "rgba(24, 163, 64, 0)",
                  },
                ],
                false
              ),
              shadowColor: "rgba(0, 0, 0, 0.1)",
              shadowBlur: fontSize(10),
            },
          },
          itemStyle: {
            normal: {
              color: "#cdba00",
              borderColor: "rgba(137,189,2,0.27)",
              borderWidth: fontSize(12),
            },
          },
          data: T6list1,
        },
      ],
    });
  }
  myChart.setOption(setOptions());
  //动效
  var interval;
  intervalLoad();
  window.addEventListener("resize", function () {
    myChart.clear();
    myChart.setOption(setOptions());
    myChart.resize();
    this.clearInterval(interval);
    intervalLoad();
  });
  function intervalLoad() {
    interval = setInterval(() => {
      myChart.clear();
      myChart.setOption(setOptions());
    }, 6000);
  }
});
/**************************************************************采购计划达成率************************************************************* */

/**************************************************************委外计划达成率************************************************************* */
// 模块3
$(function () {
  var myChart = echarts.init($("#model3 .main")[0]);
  function setOptions() {
    return (option = {
      title: {
        text: "委外计划达成率(本周)",
        left: fontSize(10),
        top: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(18),
        },
      },
      tooltip: {
        textStyle: {
          fontSize: fontSize(14),
        },
        trigger: "axis",
        axisPointer: {
          lineStyle: {
            color: "#57617B",
          },
        },
      },
      legend: {
        data: T7name,
        right: fontSize(20),
        top: fontSize(35),
        textStyle: {
          color: "rgba(255,255,255,.8)",
          fontSize: fontSize(12),
        },
        itemGap: 20,
      },
      grid: {
        left: fontSize(20),
        right: fontSize(20),
        top: fontSize(60),
        bottom: fontSize(20),
        containLabel: true,
      },
      xAxis: [
        {
          type: "category",
          boundaryGap: false,
          axisLabel: {
            show: true,
            textStyle: {
              color: "rgba(255,255,255,.8)",
              fontSize: fontSize(12),
            },
          },
          data: [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
          ],
        },
      ],
      yAxis: {
        axisLabel: {
          show: true,
          textStyle: {
            color: "rgba(255,255,255,.8)",
            fontSize: fontSize(12),
          },
        },
        axisLine: {
          lineStyle: {
            color: "rgba(255,255,255,.1)",
          },
        },
        splitLine: {
          lineStyle: {
            color: "rgba(255,255,255,.1)",
          },
        },
      },
      series: [
        {
          name: T7name[0],
          type: "line",
          smooth: true,
          symbol: "circle",
          symbolSize: fontSize(5),
          showSymbol: false,
          lineStyle: {
            normal: {
              width: fontSize(2),
            },
          },
          areaStyle: {
            normal: {
              color: new echarts.graphic.LinearGradient(
                0,
                0,
                0,
                1,
                [
                  {
                    offset: 0,
                    color: "rgba(24, 163, 64, 0.3)",
                  },
                  {
                    offset: 0.8,
                    color: "rgba(24, 163, 64, 0)",
                  },
                ],
                false
              ),
              shadowColor: "rgba(0, 0, 0, 0.1)",
              shadowBlur: fontSize(10),
            },
          },
          itemStyle: {
            normal: {
              color: "#cdba00",
              borderColor: "rgba(137,189,2,0.27)",
              borderWidth: fontSize(12),
            },
          },
          data: T7list1,
        },
      ],
    });
  }
  myChart.setOption(setOptions());
  //动效
  var interval;
  intervalLoad();
  window.addEventListener("resize", function () {
    myChart.clear();
    myChart.setOption(setOptions());
    myChart.resize();
    this.clearInterval(interval);
    intervalLoad();
  });
  function intervalLoad() {
    interval = setInterval(() => {
      myChart.clear();
      myChart.setOption(setOptions());
    }, 6000);
  }
});
/**************************************************************委外计划达成率************************************************************* */



/**************************************************************需求计划分析************************************************************* */
$(function () {
  var data =  T5list;
  var myChart = echarts.init($("#model7 .main")[0]);

  function setOptions() {
    return (option = {
      title: {
        text: "需求计划分析",
        left: fontSize(10),
        top: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(18),
        },
      },
      color: ["#38EB70", "#f4ca5c", "#cc595f", "#e3445f", "#FD9133", "#F7E270"],
      tooltip: {
        trigger: "item",
        formatter: "{a} <br/>{b} : {c} ({d}%)",
        textStyle: {
          fontSize: fontSize(14),
        },
      },
      legend: {
        itemWidth: fontSize(15), // 标志图形的长度
        itemHeight: fontSize(10), // 标志图形的宽度
        orient: "vertical",
        top: fontSize(10),
        right: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(12),
        },
        itemWidth: fontSize(15),
        itemHeight: fontSize(10),
        icon: "diamond",
        data: data,
      },
      series: {
        name: "需求计划",
        type: "pie",
        animationDuration: 1500,
        radius: ["40%", "60%"],
        center: ["50%", "60%"],
        emphasis: {
          scaleSize: fontSize(10),
          label: {
            fontStyle: "italic",
            fontWeight: "lighter",
            fontFamily: "Courier New",
            fontSize: fontSize(14),
          },
        },
        label: {
          textStyle: {
            color: "inherit",
            fontSize: fontSize(12),
          },
        },
        data: data,
      },
    });
  }
  myChart.setOption(setOptions());
  window.addEventListener("resize", function () {
    myChart.setOption(setOptions());
    myChart.resize();
  });
  //高亮
  let currentIndex = 0;
  // 默认高亮第一个
  myChart.dispatchAction({
    type: "highlight",
    seriesIndex: 0,
    dataIndex: currentIndex,
  });
  var interval;
  clearInterval(interval);
  //自动循环高亮
  interval = setInterval(function () {
    var dataLen = data.length;
    // 取消之前高亮的图形
    myChart.dispatchAction({
      type: "downplay",
      seriesIndex: 0,
      dataIndex: currentIndex,
    });
    currentIndex = (currentIndex + 1) % dataLen;
    // 高亮当前图形
    myChart.dispatchAction({
      type: "highlight",
      seriesIndex: 0,
      dataIndex: currentIndex,
    });
  }, 2800);
});
/**************************************************************需求计划分析************************************************************* */

/**************************************************************当日下达物料需求分析************************************************************* */
$(function () {
  var data =  T8list;
  var myChart = echarts.init($("#model8 .main")[0]);

  function setOptions() {
    return (option = {
      title: {
        text: "当日下达物料需求分析",
        left: fontSize(10),
        top: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(18),
        },
      },
      color: ["#38EB70", "#f4ca5c", "#cc595f", "#e3445f", "#FD9133", "#F7E270"],
      tooltip: {
        trigger: "item",
        formatter: "{a} <br/>{b} : {c} ({d}%)",
        textStyle: {
          fontSize: fontSize(14),
        },
      },
      legend: {
        itemWidth: fontSize(15), // 标志图形的长度
        itemHeight: fontSize(10), // 标志图形的宽度
        orient: "vertical",
        top: fontSize(10),
        right: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(12),
        },
        itemWidth: fontSize(15),
        itemHeight: fontSize(10),
        icon: "diamond",
        data: data,
      },
      series: {
        name: "计划物料",
        type: "pie",
        animationDuration: 1500,
        radius: ["40%", "60%"],
        center: ["50%", "60%"],
        emphasis: {
          scaleSize: fontSize(10),
          label: {
            fontStyle: "italic",
            fontWeight: "lighter",
            fontFamily: "Courier New",
            fontSize: fontSize(14),
          },
        },
        label: {
          textStyle: {
            color: "inherit",
            fontSize: fontSize(12),
          },
        },
        data: data,
      },
    });
  }
  myChart.setOption(setOptions());
  window.addEventListener("resize", function () {
    myChart.setOption(setOptions());
    myChart.resize();
  });
  //高亮
  let currentIndex = 0;
  // 默认高亮第一个
  myChart.dispatchAction({
    type: "highlight",
    seriesIndex: 0,
    dataIndex: currentIndex,
  });
  var interval;
  clearInterval(interval);
  //自动循环高亮
  interval = setInterval(function () {
    var dataLen = data.length;
    // 取消之前高亮的图形
    myChart.dispatchAction({
      type: "downplay",
      seriesIndex: 0,
      dataIndex: currentIndex,
    });
    currentIndex = (currentIndex + 1) % dataLen;
    // 高亮当前图形
    myChart.dispatchAction({
      type: "highlight",
      seriesIndex: 0,
      dataIndex: currentIndex,
    });
  }, 2800);
});
/**************************************************************当日下达物料需求分析************************************************************* */

/**************************************************************未下达物料需求分析************************************************************* */
$(function () {
  var data =  T9list;
  var myChart = echarts.init($("#model9 .main")[0]);

  function setOptions() {
    return (option = {
      title: {
        text: "未下达物料需求分析",
        left: fontSize(10),
        top: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(18),
        },
      },
      color: ["#38EB70", "#f4ca5c", "#cc595f", "#e3445f", "#FD9133", "#F7E270"],
      tooltip: {
        trigger: "item",
        formatter: "{a} <br/>{b} : {c} ({d}%)",
        textStyle: {
          fontSize: fontSize(14),
        },
      },
      legend: {
        itemWidth: fontSize(15), // 标志图形的长度
        itemHeight: fontSize(10), // 标志图形的宽度
        orient: "vertical",
        top: fontSize(10),
        right: fontSize(10),
        textStyle: {
          color: "#e9ebee",
          fontSize: fontSize(12),
        },
        itemWidth: fontSize(15),
        itemHeight: fontSize(10),
        icon: "diamond",
        data: data,
      },
      series: {
        name: "计划物料",
        type: "pie",
        animationDuration: 1500,
        radius: ["40%", "60%"],
        center: ["50%", "60%"],
        emphasis: {
          scaleSize: fontSize(10),
          label: {
            fontStyle: "italic",
            fontWeight: "lighter",
            fontFamily: "Courier New",
            fontSize: fontSize(14),
          },
        },
        label: {
          textStyle: {
            color: "inherit",
            fontSize: fontSize(12),
          },
        },
        data: data,
      },
    });
  }
  myChart.setOption(setOptions());
  window.addEventListener("resize", function () {
    myChart.setOption(setOptions());
    myChart.resize();
  });
  //高亮
  let currentIndex = 0;
  // 默认高亮第一个
  myChart.dispatchAction({
    type: "highlight",
    seriesIndex: 0,
    dataIndex: currentIndex,
  });
  var interval;
  clearInterval(interval);
  //自动循环高亮
  interval = setInterval(function () {
    var dataLen = data.length;
    // 取消之前高亮的图形
    myChart.dispatchAction({
      type: "downplay",
      seriesIndex: 0,
      dataIndex: currentIndex,
    });
    currentIndex = (currentIndex + 1) % dataLen;
    // 高亮当前图形
    myChart.dispatchAction({
      type: "highlight",
      seriesIndex: 0,
      dataIndex: currentIndex,
    });
  }, 2800);
});
/**************************************************************未下达物料需求分析************************************************************* */



// 添加足料分析列表
function addEnoughList(Data) {
  const dataList = document.getElementById('File_List1');
  for(var i=0;i<Data.length;i++){
    // 创建新的附件信息元素
    const li = document.createElement('li');
    // 如果需要高亮显示
    if (Data[i].Show_Color=='R') {
      li.style.color = '#e56968';
    }
    else if (Data[i].Show_Color=='Y') {
      li.style.color = '#FFD700';
    }
    else{
      li.style.color = '#FFFFFF';
    }

    var htmlStr='<span>'+Data[i].Task_No+'</span><span>'+Data[i].Enough_Flag+'</span><span>'+Data[i].Item_Name+'</span><span>'+Data[i].Plan_Qty+'</span><span>'+Data[i].Short_Plan_Qty+'</span>';
    li.innerHTML =htmlStr;
    //
    dataList.appendChild(li);
  }

}

// 添加足料分析列表
function addQTList(Data) {
  const dataList = document.getElementById('File_List2');
  for(var i=0;i<Data.length;i++){
    // 创建新的附件信息元素
    const li = document.createElement('li');
    // 如果需要高亮显示
    if (Data[i].Show_Color=='R') {
      li.style.color = '#e56968';
    }
    else if (Data[i].Show_Color=='Y') {
      li.style.color = '#FFD700';
    }
    else{
      li.style.color = '#00FF00';
    }

    var htmlStr='<span>'+Data[i].Group_Code+'</span><span>'+Data[i].Office_Code+'</span><span>'+Data[i].Company_Code+'</span><span>'+Data[i].Manage_Area+'</span><span>'+Data[i].Team_Leader+'</span>';
    li.innerHTML =htmlStr;
    //
    dataList.appendChild(li);
  }

}



$(function () {
  $(".wrap,.adduser").liMarquee({
    direction: "up" /*身上滚动*/,
    runshort: false /*内容不足时不滚动*/,
    scrollamount: 20 /*速度*/,
  });
  window.addEventListener("resize", function () {
    $(".wrap,.adduser").liMarquee("destroy");
    $(".wrap,.adduser").liMarquee({
      direction: "up" /*身上滚动*/,
      runshort: false /*内容不足时不滚动*/,
      scrollamount: 20 /*速度*/,
    });
  });
});



//通用方法
resize();
function resize() {
  const basewidth = 1920;
  const $width = window.innerWidth;
  if ($width > basewidth) {
    const scale = ($width / basewidth).toFixed(2);
    document.getElementsByTagName("html")[0].style.fontSize = scale + "px";
    return;
  }
  document.getElementsByTagName("html")[0].style.fontSize = "1px";
}

window.addEventListener("resize", resize, false);
//自适应的时候计算font-size或宽高
function fontSize(res) {
  const basewidth = 1920;
  const $width = window.innerWidth;
  if ($width > basewidth) {
    const scale = ($width / basewidth).toFixed(2);
    return res * scale;
  }
  return res;
}
